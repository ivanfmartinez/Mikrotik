# Check for log entries trying to login with invalid users
# put the source address in a BlackList access list
# Be carefull and have rules for safe addresses before using this blacklist

:local BLNAME "BRUTEFORCE"
:local BLTIMEOUT "1d"

# login failure for user xxx from 10.0.0.76 via ssh
:foreach message in=[/log print as-value where message~"^login failure"] do={
#  :put "$message"
   :foreach token in=[:toarray $message] do={
#        :put "$token"
        :local userPos [:find $token " user " -1]
        :local fromPos [:find $token " from " -1]
        :local viaPos  [:find $token " via " -1 ]
#        :put "$fromPos $viaPos"
        if ( ($userPos >= 0) && ( $fromPos >= 0 )  &&  ( $viaPos >= 0 ) ) do={
            :local user [:pick $token ($userPos + 6) $fromPos]
            :local ip [:pick $token ($fromPos + 6) $viaPos]
#            :put "$fromPos $viaPos $user $ip"
            if ([:len [/user find where name="$user"]] = 0) do={
                 # user not found
                 if ([:find $ip "." -1] >= 1) do={
                     :do { /ip firewall address-list add list="$BLNAME" address="$ip" timeout="$BLTIMEOUT" } on-error={  }
                 } else={
                     :do { /ipv6 firewall address-list add list="$BLNAME" address="$ip" timeout="$BLTIMEOUT" } on-error={  }
                 }
            } else={
                 # user found
            }
        }
   }
}


