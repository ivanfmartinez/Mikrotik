# Check for log entries trying to login with invalid users
# put the source address in a BlackList access list

# Be carefull and have rules for safe addresses before using this blacklist
# When a valid login via webfig expires sometimes routeros shows also a login failure, so be carefull
# when you connect via ssh and let the connection  timeout it also shows a login failure

:local BLNAME "BRUTEFORCE"
#timeout to address be in the blacklist....
:local BLINVALIDTIMEOUT "1d"
:local BLVALIDTIMEOUT "1d"
# minimum number of failures to include in the blacklist
:local INVALIDLIMIT 2
:local VALIDLIMIT 3

:local counterInvalid { "0"=0 }
:local counterValid { "0"=0 }

# login failure for user xxx from 10.0.0.76 via ssh
:foreach message in=[/log print as-value where message~"^login failure"] do={
#  :put "$message"
   :foreach token in=[:toarray $message] do={
#        :put "$token"
        :local userPos [:find $token " user " -1]
        :local fromPos [:find $token " from " -1]
        :local viaPos  [:find $token " via " -1 ]
#       :put "$fromPos $viaPos"
        if ( ($userPos >= 0) && ( $fromPos >= 0 )  &&  ( $viaPos >= 0 ) ) do={
            :local user [:pick $token ($userPos + 6) $fromPos]
            :local ip [:pick $token ($fromPos + 6) $viaPos]
            :local via [:pick $token ($viaPos + 5) [:len $token] ]
#           :put "$fromPos $viaPos $user $ip $via"
            if ([:len [/user find where name="$user"]] = 0) do={
#		:put "user not found : $user - $ip"
		:set ($counterInvalid->$ip) ($counterInvalid->$ip + 1)
            } else={
# 		:put "user found : $user - $ip"
 		:set ($counterValid->$ip) ($counterValid->$ip + 1)
            }
        }
   }
}

#:put $counterInvalid
#:put $counterValid

:foreach k,v in=$counterInvalid do={
#	:put "$k $v"
        if ( $v >= $INVALIDLIMIT ) do={
            if ([:find $k "." -1] >= 1) do={
                 :do { /ip firewall address-list add list="$BLNAME" address="$k" timeout="$BLINVALIDTIMEOUT"  comment="Check Login Failures Invalid User"} on-error={  }
            } else={
                 :do { /ipv6 firewall address-list add list="$BLNAME" address="$k" timeout="$BLINVALIDTIMEOUT"  comment="Check Login Failures Invalid User"} on-error={  }
            }
	}
}

:foreach k,v in=$counterValid do={
#	:put "$k $v"
        if ( $v >= $VALIDLIMIT ) do={
            if ([:find $k "." -1] >= 1) do={
                 :do { /ip firewall address-list add list="$BLNAME" address="$k" timeout="$BLVALIDTIMEOUT"  comment="Check Login Failures"} on-error={  }
            } else={
                 :do { /ipv6 firewall address-list add list="$BLNAME" address="$k" timeout="$BLVALIDTIMEOUT"  comment="Check Login Failures"} on-error={  }
            }
	}
}

